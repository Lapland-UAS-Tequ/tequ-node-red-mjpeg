{
    "id": "0c6e27962f6a2d15",
    "type": "subflow",
    "name": "MJPEG",
    "info": "Node to connect MJPEG data sources\n- Connects to MJPEG data stream\n- Outputs JPEG image buffers\n- Outputs limited stream and original stream\n- ID parameter is set into topic\n- Automatically reconnects every ~30 seconds if connection is lost\n\nDependencies:\n- https://flows.nodered.org/node/node-red-contrib-multipart-stream-decoder\n- https://flows.nodered.org/node/node-red-contrib-msg-speed",
    "category": "Tequ",
    "in": [
        {
            "x": 60,
            "y": 60,
            "wires": [
                {
                    "id": "b1653f56a2383bd8"
                }
            ]
        }
    ],
    "out": [
        {
            "x": 1230,
            "y": 140,
            "wires": [
                {
                    "id": "d747c1a3f852d5d5",
                    "port": 0
                }
            ]
        },
        {
            "x": 1190,
            "y": 200,
            "wires": [
                {
                    "id": "bbced33d8b96e7c4",
                    "port": 0
                }
            ]
        },
        {
            "x": 1200,
            "y": 260,
            "wires": [
                {
                    "id": "785ed00d72be5825",
                    "port": 0
                }
            ]
        }
    ],
    "env": [
        {
            "name": "protocol",
            "type": "str",
            "value": "http",
            "ui": {
                "type": "select",
                "opts": {
                    "opts": [
                        {
                            "l": {
                                "en-US": "http"
                            },
                            "v": "http"
                        },
                        {
                            "l": {
                                "en-US": "https"
                            },
                            "v": "https"
                        }
                    ]
                }
            }
        },
        {
            "name": "address",
            "type": "str",
            "value": "192.168.1.64/mpeg",
            "ui": {
                "type": "input",
                "opts": {
                    "types": [
                        "str",
                        "env"
                    ]
                }
            }
        },
        {
            "name": "id",
            "type": "str",
            "value": "1",
            "ui": {
                "type": "input",
                "opts": {
                    "types": [
                        "str",
                        "env"
                    ]
                }
            }
        },
        {
            "name": "limited_stream_rate",
            "type": "str",
            "value": "1000",
            "ui": {
                "type": "select",
                "opts": {
                    "opts": [
                        {
                            "l": {
                                "en-US": "0.5 frames / s"
                            },
                            "v": "2000"
                        },
                        {
                            "l": {
                                "en-US": "1 frames / s"
                            },
                            "v": "1000"
                        },
                        {
                            "l": {
                                "en-US": "2 frames / s"
                            },
                            "v": "500"
                        },
                        {
                            "l": {
                                "en-US": "5 frames / s"
                            },
                            "v": "200"
                        },
                        {
                            "l": {
                                "en-US": "7.5 frames / s"
                            },
                            "v": "150"
                        },
                        {
                            "l": {
                                "en-US": "10 frames / s"
                            },
                            "v": "100"
                        },
                        {
                            "l": {
                                "en-US": "15 frames / s"
                            },
                            "v": "75"
                        },
                        {
                            "l": {
                                "en-US": "20 frames / s"
                            },
                            "v": "50"
                        },
                        {
                            "l": {
                                "en-US": "25 frames / s"
                            },
                            "v": "40"
                        },
                        {
                            "l": {
                                "en-US": "50 frames / s"
                            },
                            "v": "20"
                        }
                    ]
                }
            }
        },
        {
            "name": "use_basic_auth",
            "type": "bool",
            "value": "true",
            "ui": {
                "type": "input",
                "opts": {
                    "types": [
                        "bool",
                        "env"
                    ]
                }
            }
        },
        {
            "name": "username",
            "type": "str",
            "value": "admin",
            "ui": {
                "type": "input",
                "opts": {
                    "types": [
                        "str",
                        "env"
                    ]
                }
            }
        },
        {
            "name": "password",
            "type": "env",
            "value": "stream_password",
            "ui": {
                "type": "input",
                "opts": {
                    "types": [
                        "env"
                    ]
                }
            }
        }
    ],
    "meta": {
        "module": "tequ-node-red-mjpeg",
        "type": "tequ-node-red-mjpeg",
        "version": "0.0.1",
        "author": "juha.autioniemi@lapinamk.fi",
        "desc": "Provides MJPEG data stream to [AI] Detect subflows.",
        "license": "MIT"
    },
    "color": "#A6BBCF",
    "inputLabels": [
        "Inject to start"
    ],
    "outputLabels": [
        "Stream speed out [ frames / s]",
        "Limited stream out",
        "Full speed stream out"
    ],
    "icon": "font-awesome/fa-video-camera",
    "status": {
        "x": 1120,
        "y": 320,
        "wires": [
            {
                "id": "b0f9cc90ac771f30",
                "port": 0
            }
        ]
    },
    "flow": [
        {
            "id": "dc2a83762d1d2cf4",
            "type": "multipart-decoder",
            "z": "0c6e27962f6a2d15",
            "name": "Datasource",
            "ret": "bin",
            "url": "",
            "tls": "",
            "authentication": "none",
            "delay": 0,
            "maximum": "2000000",
            "blockSize": 1,
            "enableLog": "off",
            "x": 310,
            "y": 200,
            "wires": [
                [
                    "f84b961ac4d635eb"
                ],
                []
            ]
        },
        {
            "id": "f84b961ac4d635eb",
            "type": "msg-speed",
            "z": "0c6e27962f6a2d15",
            "name": "Img / s",
            "frequency": "sec",
            "interval": 1,
            "estimation": false,
            "ignore": false,
            "pauseAtStartup": false,
            "topicDependent": false,
            "x": 490,
            "y": 180,
            "wires": [
                [
                    "e5814f3dc077582b",
                    "d747c1a3f852d5d5",
                    "6b3319b437c49d57"
                ],
                [
                    "9d72a5e58809bd62"
                ]
            ]
        },
        {
            "id": "bbced33d8b96e7c4",
            "type": "delay",
            "z": "0c6e27962f6a2d15",
            "name": "",
            "pauseType": "rate",
            "timeout": "5",
            "timeoutUnits": "seconds",
            "rate": "1",
            "nbRateUnits": "1",
            "rateUnits": "second",
            "randomFirst": "1",
            "randomLast": "5",
            "randomUnits": "seconds",
            "drop": true,
            "allowrate": true,
            "outputs": 1,
            "x": 930,
            "y": 200,
            "wires": [
                []
            ]
        },
        {
            "id": "35eb9d59e464ae82",
            "type": "change",
            "z": "0c6e27962f6a2d15",
            "name": "stop",
            "rules": [
                {
                    "t": "set",
                    "p": "stop",
                    "pt": "msg",
                    "to": "true",
                    "tot": "bool"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 150,
            "y": 200,
            "wires": [
                [
                    "dc2a83762d1d2cf4"
                ]
            ]
        },
        {
            "id": "b1653f56a2383bd8",
            "type": "change",
            "z": "0c6e27962f6a2d15",
            "name": "start",
            "rules": [
                {
                    "t": "set",
                    "p": "payload",
                    "pt": "msg",
                    "to": "",
                    "tot": "date"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 150,
            "y": 120,
            "wires": [
                [
                    "852f8b5ccc4f5888"
                ]
            ]
        },
        {
            "id": "f165902d7151edd0",
            "type": "link in",
            "z": "0c6e27962f6a2d15",
            "name": "stop stream #2",
            "links": [
                "c02f86d149e039bd"
            ],
            "x": 55,
            "y": 200,
            "wires": [
                [
                    "35eb9d59e464ae82"
                ]
            ]
        },
        {
            "id": "561f2868edef7dfe",
            "type": "link in",
            "z": "0c6e27962f6a2d15",
            "name": "start stream #2",
            "links": [
                "182d50152067afe6"
            ],
            "x": 55,
            "y": 120,
            "wires": [
                [
                    "b1653f56a2383bd8"
                ]
            ]
        },
        {
            "id": "e5814f3dc077582b",
            "type": "switch",
            "z": "0c6e27962f6a2d15",
            "name": "== 0",
            "property": "payload",
            "propertyType": "msg",
            "rules": [
                {
                    "t": "eq",
                    "v": "0",
                    "vt": "num"
                }
            ],
            "checkall": "true",
            "repair": false,
            "outputs": 1,
            "x": 670,
            "y": 80,
            "wires": [
                [
                    "b943b8bf473f2d92"
                ]
            ]
        },
        {
            "id": "c02f86d149e039bd",
            "type": "link out",
            "z": "0c6e27962f6a2d15",
            "name": "stop cmd 2 out",
            "links": [
                "f165902d7151edd0"
            ],
            "x": 1155,
            "y": 20,
            "wires": []
        },
        {
            "id": "add0032092ae9b84",
            "type": "trigger",
            "z": "0c6e27962f6a2d15",
            "name": "",
            "op1": "",
            "op2": "",
            "op1type": "nul",
            "op2type": "date",
            "duration": "5",
            "extend": false,
            "units": "s",
            "reset": "",
            "bytopic": "all",
            "outputs": 1,
            "x": 1020,
            "y": 80,
            "wires": [
                [
                    "182d50152067afe6"
                ]
            ]
        },
        {
            "id": "182d50152067afe6",
            "type": "link out",
            "z": "0c6e27962f6a2d15",
            "name": "trigger 2 out",
            "links": [
                "561f2868edef7dfe"
            ],
            "x": 1155,
            "y": 80,
            "wires": []
        },
        {
            "id": "b943b8bf473f2d92",
            "type": "delay",
            "z": "0c6e27962f6a2d15",
            "name": "",
            "pauseType": "rate",
            "timeout": "5",
            "timeoutUnits": "seconds",
            "rate": "1",
            "nbRateUnits": "30",
            "rateUnits": "second",
            "randomFirst": "1",
            "randomLast": "5",
            "randomUnits": "seconds",
            "drop": true,
            "allowrate": false,
            "outputs": 1,
            "x": 840,
            "y": 80,
            "wires": [
                [
                    "add0032092ae9b84",
                    "c02f86d149e039bd"
                ]
            ]
        },
        {
            "id": "785ed00d72be5825",
            "type": "function",
            "z": "0c6e27962f6a2d15",
            "name": "isBuffer?",
            "func": "let timestamp = msg.next_timestamp;\nlet image = msg.payload;\nmsg.mimetype = \"image/jpeg\";\nlet fps = flow.get(\"speed\")\n\nif(Buffer.isBuffer(image)){\n    node.status({ fill: \"green\", shape: \"dot\", text: env.get(\"id\") + \" | \"+fps+\"/s | \"+timestamp});  \n    msg.rate = env.get(\"limited_stream_rate\")\n    return msg;\n}\nelse{\n    node.status({fill:\"red\",shape:\"dot\",text:timestamp + \" Not an image\"});  \n}",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 680,
            "y": 260,
            "wires": [
                [
                    "bbced33d8b96e7c4"
                ]
            ]
        },
        {
            "id": "d747c1a3f852d5d5",
            "type": "change",
            "z": "0c6e27962f6a2d15",
            "name": "Set datasource to topic",
            "rules": [
                {
                    "t": "set",
                    "p": "topic",
                    "pt": "msg",
                    "to": "stream_id",
                    "tot": "env"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 720,
            "y": 140,
            "wires": [
                []
            ]
        },
        {
            "id": "b0f9cc90ac771f30",
            "type": "status",
            "z": "0c6e27962f6a2d15",
            "name": "",
            "scope": [
                "dc2a83762d1d2cf4",
                "785ed00d72be5825"
            ],
            "x": 680,
            "y": 320,
            "wires": [
                []
            ]
        },
        {
            "id": "9d72a5e58809bd62",
            "type": "moment",
            "z": "0c6e27962f6a2d15",
            "name": "set ts",
            "topic": "",
            "input": "",
            "inputType": "date",
            "inTz": "Europe/Kiev",
            "adjAmount": 0,
            "adjType": "days",
            "adjDir": "add",
            "format": "HH:mm:ss.SSS",
            "locale": "en-US",
            "output": "next_timestamp",
            "outputType": "msg",
            "outTz": "Europe/Kiev",
            "x": 490,
            "y": 260,
            "wires": [
                [
                    "785ed00d72be5825"
                ]
            ]
        },
        {
            "id": "345084531e9409d3",
            "type": "inject",
            "z": "0c6e27962f6a2d15",
            "name": "",
            "props": [
                {
                    "p": "rate",
                    "v": "limited_stream_rate",
                    "vt": "env"
                },
                {
                    "p": "payload"
                }
            ],
            "repeat": "",
            "crontab": "",
            "once": true,
            "onceDelay": "1",
            "topic": "",
            "payload": "",
            "payloadType": "str",
            "x": 690,
            "y": 200,
            "wires": [
                [
                    "bbced33d8b96e7c4"
                ]
            ]
        },
        {
            "id": "6b3319b437c49d57",
            "type": "change",
            "z": "0c6e27962f6a2d15",
            "name": "",
            "rules": [
                {
                    "t": "set",
                    "p": "speed",
                    "pt": "flow",
                    "to": "payload",
                    "tot": "msg"
                }
            ],
            "action": "",
            "property": "",
            "from": "",
            "to": "",
            "reg": false,
            "x": 700,
            "y": 40,
            "wires": [
                []
            ]
        },
        {
            "id": "852f8b5ccc4f5888",
            "type": "function",
            "z": "0c6e27962f6a2d15",
            "name": "url",
            "func": "let protocol = env.get(\"protocol\")\nlet address = env.get(\"address\")\nlet use_basic_auth = env.get(\"use_basic_auth\")\nlet username = env.get(\"username\")\nlet password = env.get(\"password\")\nlet url;\n\nif (use_basic_auth){\n    url = protocol + \"://\"+username+\":\"+password+\"@\"+ address\n}\nelse{\n    url = protocol + \"://\" + address\n}\n\nmsg.url = url;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 290,
            "y": 120,
            "wires": [
                [
                    "dc2a83762d1d2cf4"
                ]
            ]
        },
        {
            "id": "080292118c5508d1",
            "type": "subflow:0c6e27962f6a2d15",
            "z": "213d881cf0833211",
            "name": "",
            "x": 240,
            "y": 660,
            "wires": [
                [],
                [],
                []
            ]
        }
    ]
}